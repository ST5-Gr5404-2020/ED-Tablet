/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.6.1/userguide/tutorial_java_projects.html
 */

plugins {
    // Apply the java plugin to add support for Java
    id 'java'

    // Apply the application plugin to add support for building a CLI application.
    id 'application'

    //include Gradle
    id 'org.openjfx.javafxplugin' version '0.0.8'
}

javafx{
    version = "14"
    modules = ['javafx.controls','javafx.fxml']
}

repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

dependencies {
    // This dependency is used by the application.
    implementation 'com.google.guava:guava:29.0-jre'

    // Use JUnit test framework
    testImplementation 'junit:junit:4.13'

    // https://mvnrepository.com/artifact/mysql/mysql-connector-java
    compile group: 'mysql', name: 'mysql-connector-java', version: '8.0.18'
}

application {
    // Define the main class for the application.
    mainClassName = 'ED.Tablet.App'
}

task fatJar(type: Jar, group: 'Custom Tasks', description: 'Produces a jar with all dependencies included'){
    manifest {
        attributes  'Implementation-Title': 'PEPS Nord',
                    'Implementation-Version': '1.0.0',
                    'Main-Class': mainClassName
    }
    archivesBaseName = project.name
    from {
        configurations.compile.collect {
            it.isDirectory() ? it : zipTree(it) 
        }
    }
    with jar
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    group 'Custom Tasks'
    description 'Produces a jar with javadocumentation'
    getArchiveClassifier().set("javadoc")
    from javadoc.destinationDir
}

task sourcesJar(type: Jar, dependsOn: classes) {
    group 'Custom Tasks'
    description 'Produces a jar with source code'
    getArchiveClassifier().set("sources")
    from sourceSets.main.allSource
}

task completeBuild(dependsOn: ['clean','fatJar','javadocJar','sourcesJar']){
    group 'Custom Tasks'
    description 'Cleans and builds fatJar, javadocJar and sourcesJar'
}